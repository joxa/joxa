## -*- mode: Makefile; fill-column: 75; comment-column: 50; -*-

ESCRIPT_DIR=$(JOXA_BUILD_DIR)/escript
ESCRIPT_TMP=$(CURDIR)/_build/tmp2
TMPDIR=$(CURDIR)/_build/tmp
LOCAL_DEPS=$(TMPDIR)/deps.tar.gz

TEST_EBIN=$(JOXA_BUILD_DIR)/test_ebin
TEST_FLAGS=-pa $(TEST_EBIN)
EBIN_DIRS=$(wildcard $(LIBDIR)/*/ebin)
ERLFLAGS=-noshell $(EBIN_DIRS:%= -pa %)
ERLCFLAGS=$(EBIN_DIRS:%= -pa %)


JOXA_NS=$(BEAMDIR)/joxa
OTP_NS=$(JOXA_NS)/otp

COMP= $(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa.compiler' main \
      -extra

SRCBEAMS=$(BEAMDIR)/joxa/compiler.beam \
	$(BEAMDIR)/joxa/core.beam \
	$(BEAMDIR)/joxa/shell.beam \
	$(BEAMDIR)/joxa.beam \
	$(BEAMDIR)/jxa_utils.beam \
	$(BEAMDIR)/joxa/records.beam \
	$(BEAMDIR)/joxa/assert.beam \
	$(BEAMDIR)/joxa/eunit.beam \
	$(BEAMDIR)/joxa/lists.beam \
	$(BEAMDIR)/joxa/build-support.beam \
	$(BEAMDIR)/joxa/otp.beam \
	$(BEAMDIR)/joxa/otp/application.beam \
	$(BEAMDIR)/joxa/otp/supervisor.beam

TESTBEAMS = $(TEST_EBIN)/jxat_anon_fun.beam  \
	$(TEST_EBIN)/jxat_examples.beam  \
	$(TEST_EBIN)/jxat_module_info.beam \
	$(TEST_EBIN)/jxat_rest_args.beam \
	$(TEST_EBIN)/jxat_bare_module.beam \
	$(TEST_EBIN)/jxat_featureful_module.beam \
	$(TEST_EBIN)/jxat_nested_calls.beam  \
	$(TEST_EBIN)/jxat_segfault_tests.beam \
	$(TEST_EBIN)/jxat_binary.beam \
	$(TEST_EBIN)/jxat_hello_world.beam \
	$(TEST_EBIN)/jxat_parse.beam \
	$(TEST_EBIN)/jxat_specs.beam \
	$(TEST_EBIN)/jxat_case.beam \
	$(TEST_EBIN)/jxat_implicit_do.beam \
	$(TEST_EBIN)/jxat_path.beam  \
	$(TEST_EBIN)/jxat_throws.beam \
	$(TEST_EBIN)/jxat_core_add.beam \
	$(TEST_EBIN)/jxat_incremental_compile.beam  \
	$(TEST_EBIN)/jxat_peg.beam \
	$(TEST_EBIN)/jxat_try.beam \
	$(TEST_EBIN)/jxat_core_incr.beam  \
	$(TEST_EBIN)/jxat_jxa_parser_proper.beam \
	$(TEST_EBIN)/jxat_predicates.beam \
	$(TEST_EBIN)/jxat_variable_fun_tests.beam \
	$(TEST_EBIN)/jxat_ctx.beam \
	$(TEST_EBIN)/jxat_let_support.beam  \
	$(TEST_EBIN)/jxat_receive.beam   \
	$(TEST_EBIN)/jxat_do_test.beam \
	$(TEST_EBIN)/jxat_macros.beam   \
	$(TEST_EBIN)/jxat_records.beam \
	$(TEST_EBIN)/jxat_module_fun_line_support.beam \
	$(TEST_EBIN)/jxat_assert.beam \
	$(TEST_EBIN)/jxat_eunit.beam \
	$(TEST_EBIN)/joxa/test-let-match.beam \
	$(TEST_EBIN)/joxa/test/multiple-namespaces.beam

.PHONY: all test_bootstrap pre_bootstrap bootstrap clean \
	test build get-deps proper eunit \
	cucumber shell bare-escript

.PRECIOUS: %/.d

FEATURES=./features/*.feature

all: build

## Build all the directories as task dependencies
%/.d:
	@mkdir -p $(@D)
	@touch $@

$(LOCAL_DEPS): $(TMPDIR)/.d $(LIBDIR)/.d
	wget --progress=bar https://github.com/downloads/erlware/sinan/deps.tar.gz -O $(LOCAL_DEPS)
	touch $(LOCAL_DEPS)
	tar xzf $(LOCAL_DEPS) --directory=$(LIBDIR)

$(JOXA_NS)/bootstrap_compiler.beam: $(BEAMDIR)/jxa_bootstrap.beam $(JOXA_NS)/.d
	$(ERL) $(ERLFLAGS) -s jxa_bootstrap do_bootstrap \
	${BEAMDIR}/joxa/bootstrap_compiler.beam joxa.bootstrap_compiler -s init stop

$(JOXA_NS)/compiler.beam: $(SRCDIR)/joxa/compiler.jxa $(JOXA_NS)/bootstrap_compiler.beam
	$(ERL) $(ERLFLAGS) -s joxa.bootstrap_compiler main \
	-extra --bootstrap -o $(BEAMDIR) $(SRCDIR)/joxa/compiler.jxa

$(JOXA_NS)/%.beam: $(SRCDIR)/joxa/%.jxa $(JOXA_NS)/.d
	$(COMP) -o $(BEAMDIR) $<

$(OTP_NS)/%.beam: $(SRCDIR)/joxa/otp/%.jxa $(OTP_NS)/.d
	$(COMP) -o $(BEAMDIR) $<

$(BEAMDIR)/%.beam: $(SRCDIR)/%.jxa $(BEAMDIR)/.d
	$(COMP) -o $(BEAMDIR) $<

$(BEAMDIR)/%.beam: $(SRCDIR)/%.erl $(BEAMDIR)/.d
	$(ERLC) $(ERLCFLAGS) -o $(BEAMDIR) $<

$(TEST_EBIN)/%.beam: $(TESTDIR)/%.erl $(TEST_EBIN)/.d
	$(ERLC) $(ERLCFLAGS) $(TEST_FLAGS) -o $(TEST_EBIN) $<

$(TEST_EBIN)/%.beam: $(TESTDIR)/%.jxa $(TEST_EBIN)/.d
	$(COMP) -o $(TEST_EBIN) $<

$(TEST_EBIN)/test/%.beam: $(TESTDIR)/joxa/test/%.jxa $(TEST_EBIN)/test/.d
	$(COMP) -o $(TEST_EBIN) $<

$(JOXA_NS)/%.beam: $(TESTDIR)/joxa/%.jxa $(BEAMDIR)/.d
	$(COMP) -o $(BEAMDIR) $<

$(BEAMDIR)/joxa.app: $(SRCDIR)/joxa.app.src
	$(ERL) $(ERLFLAGS) -s 'joxa.build-support' 'update-app-config' \
	"$(VSN)" "joxa.app" "$(APPDIR)" "$(SRCDIR)/joxa.app.src" -s init stop

build: $(SRCBEAMS) $(TESTBEAMS) $(BEAMDIR)/joxa.app

get-deps: $(LOCAL_DEPS)

shell: build
	$(ERL) $(ERLFLAGS) -s joxa main -s init stop

clean:
	rm -rf _build
	rm -rf erl_crash.dump

test: build proper eunit cucumber

proper: $(SRCBEAMS) $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa.build-support' main proper $(APPDIR) -s init stop

eunit: $(SRCBEAMS) $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa.build-support' main eunit $(APPDIR) -s init stop


cucumber: $(SRCBEAMS) $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa.build-support' main cucumberl $(CURDIR) -s init stop

bare-escript: $(ESCRIPT_DIR)/.d $(ESCRIPT_TMP)/.d
	cp -R $(LIBDIR)/* $(ESCRIPT_TMP)
	cd $(ESCRIPT_TMP); zip -r joxa.ez *; \
	$(ERL) $(ERLFLAGS) -eval "escript:create(\"joxa\", [shebang, {emu_args, []}, {archive, \"./joxa.ez\"}])" -s init stop
	chmod 777 $(ESCRIPT_TMP)/joxa
	mv $(ESCRIPT_TMP)/joxa $(ESCRIPT_DIR)/
	rm -rf $(ESCRIPT_TMP)

escript: build bare-escript

$(TMPDIR)/bootstrap_test.jxa: $(TMPDIR) $(SRCDIR)/joxa/compiler.jxa
	cp $(SRCDIR)/joxa/compiler.jxa $(TMPDIR)/bootstrap_test.jxa

test_bootstrap: $(TMPDIR)/bootstrap_test.jxa
	sed -i 's/joxa\.compiler/bootstrap_test/g' $(TMPDIR)/bootstrap_test.jxa
	`which time` $(ERL) $(ERLFLAGS) -s joxa.compiler main \
	 -extra --bootstrap -o $(TMPDIR) $(TMPDIR)/bootstrap_test.jxa

pre_bootstrap: test_bootstrap
## Use the working compiler to build itself
	$(ERL) $(ERLFLAGS) -s joxa.compiler main \
	-extra --bootstrap -o $(BEAMDIR) $(SRCDIR)/joxa/compiler.jxa
## Have the working compiler output its own core erlang ast
	$(ERL) $(ERLFLAGS) -s joxa.compiler main \
	-extra --bootstrap --to_ast -o $(BEAMDIR) $(SRCDIR)/joxa/compiler.jxa
## copy that ast into an erl file for useful later building
	sed -i "s/'joxa\.compiler'/Name/g" $(BEAMDIR)/joxa/compiler.ast
	sed  '/<<<<REPLACE-THIS-WITH-AST>>>>/r $(BEAMDIR)/joxa/compiler.ast' $(PRIVDIR)/jxa_bootstrap.tmpl \
	| sed '/<<<<REPLACE-THIS-WITH-AST>>>>/d' > $(SRCDIR)/jxa_bootstrap.erl

bootstrap: clean build pre_bootstrap $(SRCBEAMS) $(TESTBEAMS) proper cucumber eunit

