## -*- mode: Makefile; fill-column: 75; comment-column: 50; -*-

LOCAL_DEPS=$(TMPDIR)/deps.tar.gz
GOT_DEPS=$(TMPDIR)/got-em

TEST_EBIN=$(APPDIR)/.eunit
TEST_FLAGS=-pa $(TEST_EBIN)

DEPS_DIR=$(CURDIR)/deps

EBIN_DIRS=$(wildcard $(DEPS_DIR)/*/ebin)
BASE_ERLCFLAGS=$(EBIN_DIRS:%= -pa %)
ERLCFLAGS=$(BASE_ERLCFLAGS) -pa $(BEAMDIR)
ERLFLAGS=-noshell $(ERLCFLAGS)

ASTDIR=$(SRCDIR)/ast
BOOTSTRAP_ERLFLAGS=-noshell -pa $(BOOTSTRAP_BEAMDIR) $(BASE_ERLCFLAGS)

COMP= $(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa-compiler' main \
      -extra

SRCBEAMS=$(BEAMDIR)/joxa-compiler.beam \
	$(BEAMDIR)/joxa-core.beam \
	$(BEAMDIR)/joxa-shell.beam \
	$(BEAMDIR)/joxa-records.beam \
	$(BEAMDIR)/joxa-assert.beam \
	$(BEAMDIR)/joxa-eunit.beam \
	$(BEAMDIR)/joxa-lists.beam \
	$(BEAMDIR)/joxa.beam \
	$(BEAMDIR)/joxa-build-support.beam \
	$(BEAMDIR)/joxa-otp.beam \
	$(BEAMDIR)/joxa-otp-application.beam \
	$(BEAMDIR)/joxa-otp-supervisor.beam

TESTBEAMS = $(TEST_EBIN)/joxa-test-let-match.beam \
	$(TEST_EBIN)/joxa-test-multiple-namespaces.beam \
	$(TEST_EBIN)/joxa-test-namespace-mutual-recursion.beam \
	$(TEST_EBIN)/joxa-test-joxification.beam

.PHONY: all test_bootstrap pre_bootstrap bootstrap clean \
	jxa test build get-deps proper eunit \
	cucumber shell bare-escript

.PRECIOUS: %/.d

FEATURES=./features/*.feature

all: build

## Build all the directories as task dependencies
%/.d:
	@mkdir -p $(@D)
	@touch $@

$(BOOTSTRAP_BEAMDIR)/%.beam: $(SRCDIR)/%.erl $(BOOTSTRAP_BEAMDIR)/.d
	$(ERLC) $(ERLCFLAGS) -o $(BOOTSTRAP_BEAMDIR) $<

$(BOOTSTRAP_BEAMDIR)/%.beam: $(ASTDIR)/%.ast $(BOOTSTRAP_BEAMDIR)/jxa_bootstrap.beam $(BOOTSTRAP_BEAMDIR)/.d
	$(ERL) $(BOOTSTRAP_ERLFLAGS) -s jxa_bootstrap do_bootstrap $@ $< -s init stop

$(BEAMDIR)/joxa-compiler.beam: $(SRCDIR)/joxa-compiler.jxa $(BOOTSTRAP_BEAMDIR)/joxa-compiler.beam
	@echo bootstrapping the compiler
	$(ERL) $(BOOTSTRAP_ERLFLAGS) -s joxa-compiler main \
	-extra --bootstrap -o $(BEAMDIR) $(SRCDIR)/joxa-compiler.jxa

$(BEAMDIR)/%.beam: $(SRCDIR)/%.jxa $(BEAMDIR)/.d $(BEAMDIR)/joxa-compiler.beam
	$(COMP) -o $(BEAMDIR) $<

$(TEST_EBIN)/%.beam: $(TESTDIR)/%.erl $(TEST_EBIN)/.d
	$(ERLC) $(ERLCFLAGS) $(TEST_FLAGS) -o $(TEST_EBIN) $<

$(TEST_EBIN)/%.beam: $(TESTDIR)/%.jxa $(TEST_EBIN)/.d $(BEAMDIR)/joxa-compiler.beam
	$(COMP) -o $(TEST_EBIN) $<

jxa: $(SRCBEAMS)

build:
	$(REBAR) compile

get-deps:
	$(REBAR) get-deps

shell: build $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) -s joxa main -s init stop

clean:
	$(REBAR) skip_deps=true clean
	rm -rf $(APPDIR)/joxa
	rm -rf $(APPDIR)/.bootstrap
	rm -rf $(APPDIR)/_build
	rm -rf $(APPDIR)/erl_crash.dump

distclean: clean
	rm -rf $(APPDIR)/deps

test: build proper eunit cucumber

eunit: $(SRCBEAMS) $(TESTBEAMS)
	$(REBAR) skip_deps=true eunit
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa-build-support' main eunit $(BEAMDIR) -s init stop
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa-build-support' main eunit $(TEST_EBIN) -s init stop

proper: eunit $(SRCBEAMS) $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa-build-support' main proper $(TEST_EBIN) -s init stop


cucumber: eunit $(SRCBEAMS) $(TESTBEAMS)
	$(ERL) $(ERLFLAGS) $(TEST_FLAGS) -s 'joxa-build-support' main cucumberl $(CURDIR) -s init stop

bare-escript:
	$(REBAR) skip_deps=true escriptize

escript: build bare-escript

pre_bootstrap:
## Use the working compiler to build itself
	$(ERL) $(ERLFLAGS) -s joxa-compiler main \
	-extra --bootstrap -o $(BEAMDIR) $(SRCDIR)/joxa-compiler.jxa
## Have the working compiler output its own core erlang ast
	$(ERL) $(ERLFLAGS) -s joxa-compiler main \
	-extra --bootstrap --to_ast -o $(ASTDIR) $(SRCDIR)/joxa-compiler.jxa
## copy that ast into an erl file for useful later building
	echo "." >> $(ASTDIR)/joxa-compiler.ast

bootstrap: pre_bootstrap clean build test
